{
  "root": true,
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "sourceType": "module",
    "ecmaVersion": 2020,
    "project": "./tsconfig.json"
  },
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/eslint-recommended",
    "prettier"
  ],
  "plugins": [
    "@typescript-eslint",
    "prettier"
  ],
  "env": {
    "node": true,
    "es6": true
  },
  "overrides": [
    {
      "files": ["js/**/*"],
      "env": {
        "node": false,
        "browser": true,
        "es6": true
      },
      "parserOptions": {
        "sourceType": "script",
        "ecmaVersion": 2020
      },
      "rules": {
        "no-use-before-define": "off",
        "no-redeclare": "off",
        "no-unused-vars": "error",
        "@typescript-eslint/no-unused-vars": "off"
      },
      "globals": {
        "multipageMap": "readonly",
        "usesMultipage": "readonly",
        "idToSection": "readonly",
        "sdoMap": "readonly",
        "biblio": "readonly",
        "debounce": "writable",
        "menu": "writable",
        "referencePane": "writable",
        "sdoBox": "writable",
        "Toolbox": "writable"
      }
    },
    {
      "files": ["test/**/*"],
      "env": {
        "mocha": true
      },
      "parserOptions": {
        "sourceType": "script",
        "ecmaVersion": 2020
      }
    },
    {
      "files": ["bin/**/*"],
      "parserOptions": {
        "sourceType": "script",
        "ecmaVersion": 2020
      }
    }
  ],
  "rules": {
    "prettier/prettier": "error",
    "arrow-body-style": "error",
    "prefer-arrow-callback": "error",
    "object-shorthand": "error",
    "no-inner-declarations": "off",
    "consistent-return": "off",
    "no-floating-decimal": "error",
    "no-self-compare": "error",
    "no-throw-literal": "error",
    "no-void": "error",
    "strict": [
      "error",
      "global"
    ],
    "@typescript-eslint/no-use-before-define": [
      "error",
      {
        "functions": false,
        "typedefs": false
      }
    ],
    "no-underscore-dangle": "off",
    "no-constant-condition": "off",
    "camelcase": [
      "error",
      {
        "properties": "never"
      }
    ],
    "no-empty": "error",
    "curly": [
      "error",
      "multi-line"
    ],
    "no-var": "error",
    "no-unused-vars": "off",
    "@typescript-eslint/no-unused-vars": "error",
    "@typescript-eslint/no-unnecessary-type-assertion": "error"
  }
}
