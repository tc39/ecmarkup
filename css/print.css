body {
  font-family: Arial;
  font-size: 10pt;
  background: #fff;
  color: #000;
}

.title {
  font-family: Verdana;
}

p {
  text-align: justify;
  text-rendering: optimizeLegibility;
  text-wrap: pretty;
  overflow-wrap: break-word;
  hyphens: auto;
  orphans: 2;
  widows: 2;
}

emu-note p,
emu-table td p {
  text-align: left;
  hyphens: manual;
  overflow: hidden;
}

emu-table td,
emu-table th {
  overflow-wrap: break-word;
}

emu-table table {
  table-layout: auto;
  width: 100%;
}

emu-figure img {
  max-width: 100%;
  height: auto;
}

#spec-container {
  max-width: none;
}

#toc a[href] {
  background: #fff;
  padding-right: 0.5em;
}
#toc a[href]::after {
  content: /* leader(dotted) */ target-counter(attr(href), page);
  float: right;
  padding-left: 0.5em;
  background: #fff;
}
/* NOTE: hacks because paged.js doesn't support leader() in content directives */
#toc ol {
  overflow-x: hidden;
}
#toc ol li:before {
  float: left;
  width: 0;
  white-space: nowrap;
  content: '. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . '
    '. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . '
    '. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .';
}

#toc,
#spec-container > emu-intro,
#spec-container > emu-clause,
#spec-container > emu-annex {
  break-before: recto;
  break-after: always;
}

emu-note,
emu-note p,
emu-table tr,
emu-table th,
emu-table td,
emu-alg li,
pre,
h1 {
  break-inside: avoid;
}

emu-table thead,
h1,
figcaption,
emu-alg > ol > li:first-child {
  break-after: avoid;
}

emu-grammar + emu-alg,
figcaption + emu-table,
figcaption + span[id] + emu-table,
emu-alg > ol > li:last-child {
  break-before: avoid;
}

a[data-print-href]::after {
  content: ' <' attr(href) '>';
  color: initial;
}

emu-table thead {
  display: table-header-group;
}
emu-table tfoot {
  display: table-footer-group;
}

@page {
  size: A4;
}

@page {
  @top-center {
    content: url(img/ecma-header.png);
  }
}
@page :first {
  @top-center {
    content: none;
  }
}

:root {
  counter-reset: page;
  --page-number-style: decimal;
}

@page {
  counter-increment: page 1;
}

#toc {
  page: toc;
}
@page toc {
  --page-number-style: lower-roman;
}
emu-intro {
  page: intro;
}
@page intro {
  --page-number-style: lower-roman;
}

@page :first {
  counter-set: page 0;
}
/* NOTE: we kind of rely on this section being a single page since the "page" directive doesn't just name a page, it also forces a page break */
#spec-container > emu-clause:first-of-type {
  page: first-clause;
}
/* NOTE: we can only reset the counter and have it take effect on the same page in a @page rule */
@page first-clause {
  counter-set: page 1;
}

@page :left {
  @bottom-left {
    content: counter(page, var(--page-number-style));
  }
}
@page :right {
  @bottom-right {
    content: counter(page, var(--page-number-style));
  }
}

@page :first {
  @bottom-left {
    content: '';
  }
  @bottom-right {
    content: '';
  }
}
